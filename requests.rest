# Base URL
@baseUrl = http://localhost:5000/api
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ZTMxYjAxMTE0OWY4ZjlmMjVkMmZhNyIsImlhdCI6MTcyNzEzMjUwMSwiZXhwIjoxNzI5NzI0NTAxfQ.w0sTqwEh7xq7anXWzJ8CddS28GNg981mM_QhxcQ0SOY  # Replace this with the actual token

# 1. Register a new user
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "username": "user",
  "email": "u@gmail.com",
  "password": "123456"
}

### 2. Login a user
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "jb@gmail.com",
  "password": "123456"
}

### 3. Get all journals (Authenticated)
GET {{baseUrl}}/journals
Authorization: Bearer {{token}}

### 4. Create a new journal (Authenticated)
POST {{baseUrl}}/journals
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ZTMxYjAxMTE0OWY4ZjlmMjVkMmZhNyIsImlhdCI6MTcyNzAyMDE5NiwiZXhwIjoxNzI5NjEyMTk2fQ.eQska9nylrRaZPWM87lSTBV3iDaqzWdgQ91m35H-mso
Content-Type: application/json

{
  "title": "JB new Journal 2",
  "description": "A new journal description"
}

### 5. Get a specific journal by ID (Authenticated)
# Replace {journalId} with the actual journal ID from the response of the previous request
GET {{baseUrl}}/journals/{journalId}
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2Y2ZjMjIwNzE3MTkyNjUwMGNmYjVjNiIsImlhdCI6MTcyNTgwMTk5NywiZXhwIjoxNzI4MzkzOTk3fQ.QkRSV_-8dV2hKuyrrl9HGcvPDPN6rPuMHlHjCW69-NI

### 6. Update a journal by ID (Authenticated)
# Replace {journalId} with the actual journal ID
PUT {{baseUrl}}/journals/{journalId}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Updated Journal Title",
  "description": "Updated description for the journal."
}

### 7. Delete a journal by ID (Authenticated)
# Replace {journalId} with the actual journal ID
DELETE {{baseUrl}}/journals/66f02cc1cb3bd5daf518d4d5
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ZTMxYjAxMTE0OWY4ZjlmMjVkMmZhNyIsImlhdCI6MTcyNzAxNjA5NCwiZXhwIjoxNzI5NjA4MDk0fQ.1MlHA0CK9BdpS95llHYY93yAEuOJYKQc6ZCtcNtqomQ

### 8. Create a new entry in a specific journal (Authenticated)
# Replace {journalId} with the actual journal ID
POST {{baseUrl}}/entries
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ZTMxYjAxMTE0OWY4ZjlmMjVkMmZhNyIsImlhdCI6MTcyNzAyMDE5NiwiZXhwIjoxNzI5NjEyMTk2fQ.eQska9nylrRaZPWM87lSTBV3iDaqzWdgQ91m35H-mso
Content-Type: application/json

{
  "title": "JB's enveing thoughts",
  "content": "Today, I reflected on the importance of mindfulness.",
  "journal": "66f03cc0f67886ea683172da"
}

### 9. Get all entries for a specific journal (Authenticated)
# Replace {journalId} with the actual journal ID
GET {{baseUrl}}/entries/journal/{journalId}
Authorization: Bearer {{token}}

### 10. Get a specific entry by ID (Authenticated)
# Replace {entryId} with the actual entry ID from the response of the previous request
GET {{baseUrl}}/entries/{entryId}
Authorization: Bearer {{token}}

### 11. Update an entry by ID (Authenticated)
# Replace {entryId} with the actual entry ID
PUT {{baseUrl}}/entries/{entryId}
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "title": "Updated Entry Title",
  "content": "Updated content for the journal entry."
}

### 12. Delete an entry by ID (Authenticated)
# Replace {entryId} with the actual entry ID
DELETE {{baseUrl}}/entries/66f03cf7f67886ea683172de
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ZTMxYjAxMTE0OWY4ZjlmMjVkMmZhNyIsImlhdCI6MTcyNzAyMDE5NiwiZXhwIjoxNzI5NjEyMTk2fQ.eQska9nylrRaZPWM87lSTBV3iDaqzWdgQ91m35H-mso
